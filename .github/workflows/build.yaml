name: Build and Deploy

on:
  workflow_dispatch:
  push:
    branches: ["main", "dev"]

jobs:
  build:
    environment: main
    env:
      GH_ACCESS_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
    runs-on: ubuntu-latest
    outputs:
      latest_tag: ${{ steps.set_latest_tag.outputs.latest_tag }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Install musl cc
        uses: awalsh128/cache-apt-pkgs-action@v1
        with:
          packages: musl-tools musl-dev musl
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version-file: './go.mod'
      #          cache: false  # Disable Go modules caching
      - name: Tag Version
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GH_ACCESS_TOKEN }}
          release_branches: main
          tag_prefix: v
      # Removed Go modules cache step
      - name: Configure Git for Private Repos
        run: |
          git config --global url.https://$GH_ACCESS_TOKEN@github.com/opengovern.insteadOf https://github.com/opengovern
      - name: Build CloudFlare Plugin App
        working-directory: ./steampipe-plugin-cloudflare
        run: make build
      - name: Pack CloudFlare Plugin Build
        working-directory: ./steampipe-plugin-cloudflare
        run: |
          tar -cvf build.tar build
      - name: Upload CloudFlare Plugin Artifact
        uses: actions/upload-artifact@v3
        with:
          name: steampipe-plugin-cloudflare
          path: ./steampipe-plugin-cloudflare/build.tar
          retention-days: 1
      - name: Build Local Describer App
        working-directory: .
        run: make local-build
      - name: Pack Local Describer Build
        working-directory: .
        run: |
          tar -cvf local.tar local
      - name: Upload Local Artifact
        uses: actions/upload-artifact@v3
        with:
          name: local-og-describer-cloudflare
          path: ./local.tar
          retention-days: 1
      - name: Set Latest Tag Output
        id: set_latest_tag
        run: |
          if [[ -z "${{ steps.tag_version.outputs.new_tag }}" ]]; then
            echo "latest_tag=${{ steps.tag_version.outputs.previous_tag }}" >> "$GITHUB_OUTPUT"
          else
            echo "latest_tag=${{ steps.tag_version.outputs.new_tag }}" >> "$GITHUB_OUTPUT"
          fi

  deploy-github-plugin:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    environment: main
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Download cloudflare Plugin Artifact
        uses: actions/download-artifact@v3
        with:
          name: steampipe-plugin-cloudflare
          path: .
      - name: Unpack CloudFlare Plugin Artifact
        run: |
          tar -xvf build.tar
      - name: Log in to Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}
      - name: Build and Push Docker Image for CloudFlare Plugin
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/steampipe-plugin-cloudflare:0.0.1
            ghcr.io/${{ github.repository_owner }}/steampipe-plugin-cloudflare:${{ needs.build.outputs.latest_tag }}
          file: steampipe-plugin-cloudflare/docker/Dockerfile
          context: .

  deploy-local-describer:
    needs:
      - build
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    environment: main
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Download Local Describer Artifact
        uses: actions/download-artifact@v3
        with:
          name: local-og-describer-cloudflare
          path: .
      - name: Unpack Local Describer Artifact
        run: |
          tar -xvf local.tar
      - name: Log in to Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}
      - name: Build and Push Docker Image for Local Describer
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/og-describer-cloudflare:local-latest
            ghcr.io/${{ github.repository_owner }}/og-describer-cloudflare:local-${{ needs.build.outputs.latest_tag }}
          file: DockerFileLocal
          context: .
